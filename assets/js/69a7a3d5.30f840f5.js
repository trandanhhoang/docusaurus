"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2210],{4399:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var a=t(5893),s=t(1151);const r={},i="Get dto class from jpa after join table.",o={id:"java-basic/get-dto-from-join-database",title:"Get dto class from jpa after join table.",description:"T\xf3m t\u1eaft",source:"@site/docs/java-basic/get-dto-from-join-database.md",sourceDirName:"java-basic",slug:"/java-basic/get-dto-from-join-database",permalink:"/docs/java-basic/get-dto-from-join-database",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Set up local stack with docker-compose",permalink:"/docs/java-basic/aws-local-stack"},next:{title:"Map enum with handler",permalink:"/docs/java-basic/map-enum-with-handler"}},c={},l=[{value:"T\xf3m t\u1eaft",id:"t\xf3m-t\u1eaft",level:2},{value:"reference",id:"reference",level:2},{value:"Code example",id:"code-example",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"get-dto-class-from-jpa-after-join-table",children:"Get dto class from jpa after join table."}),"\n",(0,a.jsx)(n.h2,{id:"t\xf3m-t\u1eaft",children:"T\xf3m t\u1eaft"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["H\u01b0\u1edbng d\u1eabn t\u1ea1o class dto t\u1eeb 2 b\u1ea3ng join v\u1edbi nhau thay v\xec nh\u1eadn ",(0,a.jsx)(n.code,{children:"List<Map<String,String>>"})]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"reference",children:"reference"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://thorben-janssen.com/spring-data-jpa-dto-native-queries/",children:"https://thorben-janssen.com/spring-data-jpa-dto-native-queries/"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"code-example",children:"Code example"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"B\u01b0\u1edbc 1: t\u1ea1o interface dto"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public interface LeadWithSessionDto {\n    Long getId();\n\n    String getCifNumber();\n}\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"B\u01b0\u1edbc 2: t\u1ea1o method trong repository, ch\xfa \xfd c\u1ea7n native query v\xe0 \u0111\u1ecbnh ngh\u0129a alias camel case cho t\u1eebng column"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'/*\n    * 1. JPA can\'t map snake case with getter methods, so need to define alisa in camel case for each column.\n    * 2. You need to use native query\n    * */\n    @Query(value = """\n        SELECT\n          lm.id,\n          lm.cif_number as cifNumber\n        FROM lead_managements lm\n        INNER JOIN lead_sessions ls ON lm.id = ls.lead_id\n        WHERE lm.product_id = :productId\n            AND lm.cif_number = :cifNumber\n        ORDER BY ls.updated_at DESC\n        LIMIT 1\n          """, nativeQuery = true)\n    LeadWithSessionDto getCurrentLead(String productId, String cifNumber);\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>i});var a=t(7294);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);