"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3694],{1268:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=t(5893),r=t(1151);const i={sidebar_position:5},o="\u0110\u1ecdc file csv",s={id:"java-basic/csv",title:"\u0110\u1ecdc file csv",description:"T\xf3m t\u1eaft:",source:"@site/docs/java-basic/csv.md",sourceDirName:"java-basic",slug:"/java-basic/csv",permalink:"/docs/java-basic/csv",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"DynamicProxy",permalink:"/docs/java-basic/DynamicProxy"},next:{title:"Set up local stack with docker-compose",permalink:"/docs/java-basic/aws-local-stack"}},c={},l=[{value:"T\xf3m t\u1eaft:",id:"t\xf3m-t\u1eaft",level:2},{value:"Code example",id:"code-example",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"\u0111\u1ecdc-file-csv",children:"\u0110\u1ecdc file csv"}),"\n",(0,a.jsx)(n.h2,{id:"t\xf3m-t\u1eaft",children:"T\xf3m t\u1eaft:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Nh\u1eadn data t\u1eeb file csv (c\xf3 th\u1ec3 call th\xf4ng qua postman)"}),"\n",(0,a.jsx)(n.li,{children:"Code example x\u1eed l\xfd blocking ho\u1eb7c non blocking"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"code-example",children:"Code example"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"blocking world"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'    @PostMapping("/upload")\n    public void uploadFromCsv(@RequestParam("file") MultipartFile file) {\n        getDataFromCsv(file.getInputStream());\n    }\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Reactor project"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'    @PostMapping("/upload")\n    public Mono<ResponseApi<String>> uploadFromCsv(FilePart file) {\n        return file.content()\n                .map(\n                        dataBuffer -> {\n                            getDataFromCsv(dataBuffer.asInputStream());\n                            return "Success";\n                        })\n                .then(Mono.just(ResponseApi.success(new ResponseStatus(STATUS_SUCCESS, ""), "Success")))\n                .onErrorResume(\n                        e -> Mono.just(ResponseApi.error("ERROR WHEN UPLOAD CSV FILE", e.getMessage())));\n    }\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'public void getDataFromCsv(InputStream is) {\n        try (BufferedReader fileReader = new BufferedReader(new InputStreamReader(is, "UTF-8"));\n                CSVParser csvParser =\n                        new CSVParser(\n                                fileReader,\n                                CSVFormat.DEFAULT.withFirstRecordAsHeader().withIgnoreHeaderCase().withTrim()); ) {\n\n            List<Application> applications = new ArrayList<>();\n            List<OriginationInfo> originationInfos = new ArrayList<>();\n\n            Iterable<CSVRecord> csvRecords = csvParser.getRecords();\n\n            for (CSVRecord csvRecord : csvRecords) {\n                String data = csvRecord.get("data");\n            }\n            \n        } catch (IOException e) {\n            throw new RuntimeException("fail to parse CSV file: " + e.getMessage());\n        }\n    }\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Library"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"package com.example.csvhandlerecords;\n\nimport com.google.common.collect.Iterators;\nimport com.opencsv.CSVReader;\nimport com.opencsv.bean.CsvToBean;\nimport com.opencsv.bean.CsvToBeanBuilder;\nimport com.opencsv.bean.HeaderColumnNameMappingStrategy;\nimport org.springframework.stereotype.Service;\nimport org.springframework.web.multipart.MultipartFile;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.nio.charset.StandardCharsets;\n@Service\npublic class CSVService {\n\n  public void save(MultipartFile file) {\n    try {\n      BufferedReader fileReader =\n              new BufferedReader(\n                      new InputStreamReader(\n                              file.getInputStream(),\n                              StandardCharsets.UTF_8));\n      CSVReader csvReader = new CSVReader(fileReader);\n      HeaderColumnNameMappingStrategy<SinhVien> strategy =\n              new HeaderColumnNameMappingStrategy<>();\n      strategy.setType(SinhVien.class);\n      CsvToBeanBuilder<SinhVien> onboardingDtoCsvToBeanBuilder =\n              new CsvToBeanBuilder<SinhVien>(csvReader)\n                      .withType(SinhVien.class)\n                      .withMappingStrategy(strategy)\n                      .withSeparator(',')\n                      .withIgnoreLeadingWhiteSpace(true)\n                      .withIgnoreEmptyLine(true);\n\n      CsvToBean<SinhVien> datas = onboardingDtoCsvToBeanBuilder.build();\n      Iterators.partition(datas.stream().iterator(), 100)\n              .forEachRemaining(\n                      onboardingDtoList -> {\n                        try {\n                          onboardingDtoList.forEach(\n                                  onboardingDto -> {\n                                      System.out.println(onboardingDto);\n                                      System.out.println(onboardingDto);\n                                  });\n                        } catch (Exception ex) {\n                            System.out.println();\n                        }\n                      });\n    } catch (IOException e) {\n      throw new RuntimeException(\"fail to store csv data: \" + e.getMessage());\n    }\n  }\n}\n\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>o});var a=t(7294);const r={},i=a.createContext(r);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);